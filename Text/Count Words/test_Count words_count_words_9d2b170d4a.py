# Test generated by RoostGPT for test MiniPythonProjects using AI Type Azure Open AI and AI Model roost-gpt4-32k

"""
1. Test with a sentence that is all the same word. The output dictionary should have one key, and its value should be the count of the word in the sentence.
   
2. Test with a sentence where all words are different. The output dictionary should have as many keys as there are words in the sentence, and every word should have a count of 1.

3. Test with a sentence containing a mix of the two scenarios above. Some words should appear more than once, and some only once. The output dictionary should correctly reflect this.

4. Test with an empty string. The output dictionary should be empty as well as there are no words to count.

5. Test with a string that only contains spaces. The output dictionary should also be empty, as there are no words to count.

6. Test with a sentence that contains punctuations. The output dictionary should not count punctuations as part of a word (unless specifically defined in that manner).

7. Test with a string that includes numbers (e.g., 'Hello, I have 2 apples'). The function should treat numbers as words and count them.

8. Test with words in mixed casing. As Python is case sensitive 'Word' and 'word' should be treated as different words.

9. Test with a sentence where some words are separated by more than one space. The function should correctly count these words.

10. Test with a string that contains special characters. The function should treat special characters as part of a word if attached to a word.  
"""
# Importing required modules
import pytest
import count_words

# Creating test function for each scenario
def test_all_same_word():
    result = count_words.count_words('test test test test')
    assert result == {'test': 4}

def test_all_different_words():
    result = count_words.count_words('This is a test')
    assert result == {'This': 1, 'is': 1, 'a': 1, 'test': 1}

def test_mixed_words():
    result = count_words.count_words('This is a test test')
    assert result == {'This': 1, 'is': 1, 'a': 1, 'test': 2}

def test_empty_string():
    result = count_words.count_words('')
    assert result == {}

def test_space_string():
    result = count_words.count_words('    ')
    assert result == {}

def test_sent_contains_punctuations():
    result = count_words.count_words('Hello, World!')
    assert result == {'Hello,': 1, 'World!': 1}

def test_string_contains_numbers():
    result = count_words.count_words('Hello, I have 2 apples')
    assert result == {'Hello,': 1, 'I': 1, 'have': 1, '2': 1, 'apples': 1}

def test_mixed_case_words():
    result = count_words.count_words('This is a Test test TEST')
    assert result == {'This': 1, 'is': 1, 'a': 1, 'Test': 1, 'test': 1, 'TEST': 1}

def test_more_than_one_space_separation():
    result = count_words.count_words('one  two   three')
    assert result == {'one': 1, 'two': 1, 'three': 1}

def test_string_contains_special_characters(): 
    result = count_words.count_words('Hello$world, I own 5electroni&cs$')
    assert result == {'Hello$world,': 1, 'I': 1, 'own': 1, '5electroni&cs$': 1}
